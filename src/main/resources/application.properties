# MongoDB properties
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=testDataPojo

# Hibernate properties
# (These properties are general and might also affect your H2 database configuration for tests)
# For production, you might want 'update' or 'validate', but for testing, 'create-drop' is often preferred.
# Adjust as necessary based on your environment and use case.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# TestNG properties
testng.xml.path=src/testDataPojo/resources/testNG.xml

# Logging properties
logging.level.org.springframework=INFO
logging.level.com.example.demo=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# H2 in-memory database properties (for testing purposes)
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# This is specifically for testing, to ensure the schema is clean for each test.
# It creates the schema on startup and drops it when the SessionFactory closes.
spring.jpa.hibernate.ddl-auto=create-drop

# Suppress Hibernate SQL command logs in tests to avoid clutter in your console.
# You can set this to 'true' if you wish to see the logs for debugging purposes.
spring.jpa.show-sql=false

# NOTE: If you are defining profile-specific settings, consider using profile-specific property files like 'application-test.properties'.
